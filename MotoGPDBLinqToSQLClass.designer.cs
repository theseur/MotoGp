#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MotoGPWeb1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CreateMotoGPDb4")]
	public partial class MotoGPDBLinqToSQLClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMotoGPDB4(MotoGPDB4 instance);
    partial void UpdateMotoGPDB4(MotoGPDB4 instance);
    partial void DeleteMotoGPDB4(MotoGPDB4 instance);
    #endregion
		
		public MotoGPDBLinqToSQLClassDataContext() : 
				base(global::MotoGPWeb1.Properties.Settings.Default.CreateMotoGPDb4ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MotoGPDBLinqToSQLClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotoGPDBLinqToSQLClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotoGPDBLinqToSQLClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotoGPDBLinqToSQLClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MotoGPDB4> MotoGPDB4s
		{
			get
			{
				return this.GetTable<MotoGPDB4>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MotoGPDB4")]
	public partial class MotoGPDB4 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TeamName;
		
		private int _YearOfFound;
		
		private int _WonChamps;
		
		private bool _Fee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTeamNameChanging(string value);
    partial void OnTeamNameChanged();
    partial void OnYearOfFoundChanging(int value);
    partial void OnYearOfFoundChanged();
    partial void OnWonChampsChanging(int value);
    partial void OnWonChampsChanged();
    partial void OnFeeChanging(bool value);
    partial void OnFeeChanged();
    #endregion
		
		public MotoGPDB4()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this.OnTeamNameChanging(value);
					this.SendPropertyChanging();
					this._TeamName = value;
					this.SendPropertyChanged("TeamName");
					this.OnTeamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfFound", DbType="Int NOT NULL")]
		public int YearOfFound
		{
			get
			{
				return this._YearOfFound;
			}
			set
			{
				if ((this._YearOfFound != value))
				{
					this.OnYearOfFoundChanging(value);
					this.SendPropertyChanging();
					this._YearOfFound = value;
					this.SendPropertyChanged("YearOfFound");
					this.OnYearOfFoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WonChamps", DbType="Int NOT NULL")]
		public int WonChamps
		{
			get
			{
				return this._WonChamps;
			}
			set
			{
				if ((this._WonChamps != value))
				{
					this.OnWonChampsChanging(value);
					this.SendPropertyChanging();
					this._WonChamps = value;
					this.SendPropertyChanged("WonChamps");
					this.OnWonChampsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee", DbType="Bit NOT NULL")]
		public bool Fee
		{
			get
			{
				return this._Fee;
			}
			set
			{
				if ((this._Fee != value))
				{
					this.OnFeeChanging(value);
					this.SendPropertyChanging();
					this._Fee = value;
					this.SendPropertyChanged("Fee");
					this.OnFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
